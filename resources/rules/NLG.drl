//created on: 06 12, 13
package rules

import pup.thesis.nlu.pos.TypedDep;
import pup.thesis.nlu.pos.Word;
import pup.thesis.nlu.pos.PhraseProcessor;

rule "Rule for amod"
    when
    	$sent : PhraseProcessor( $dependencies : dependencies() )
    	$tdep : TypedDep( reln() == "amod" ) from $dependencies
    then
    	System.out.println("DRL[amod]:"+$tdep.toString());
        $sent.addModifier($tdep.gov(),$tdep.dep());
end

rule "Rule for det"
    when
    	$sent : PhraseProcessor( $dependencies : dependencies() )
    	$tdep : TypedDep( reln() == "det" ) from $dependencies
    then
    	System.out.println("DRL[det]:"+$tdep.toString());
        $sent.addNounDeterminer($tdep.gov(),$tdep.dep());
end

rule "Rule for iobj"
    when
    	$sent : PhraseProcessor( $dependencies : dependencies() )
    	$tdep : TypedDep( reln() == "iobj" ) from $dependencies
    then
    	System.out.println("DRL[iobj]:"+$tdep.toString());
        $sent.setSpiObject($tdep.gov(),$tdep.dep());
end

rule "Rule for dobj"
    when
    	$sent : PhraseProcessor( $dependencies : dependencies() )
    	$tdep : TypedDep( reln() == "dobj" ) from $dependencies
    then
    	System.out.println("DRL[dobj]:"+$tdep.toString());
        $sent.setSpdObject($tdep.gov(),$tdep.dep());
end

rule "Rule for nsubj"
    when
    	$sent : PhraseProcessor( $dependencies : dependencies() )
    	$tdep : TypedDep( reln() == "nsubj" ) from $dependencies
    then
    	System.out.println("DRL[nsubj]:"+$tdep.toString());
        $sent.addVerbxSubject($tdep.gov(),$tdep.dep());
end








